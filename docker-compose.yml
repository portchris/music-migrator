version: '3.7'

services:
  
  mmnginx:
    container_name: mmnginx
    build: ./env/nginx
    ports:
      - 8083:8083
    expose:
      - 80
      - 443
    env_file:
      - ./env/nginx/.env
    depends_on:
      - mmapp
    tty: true
    volumes:
      - ./src:/home/www/music-migrator/src
      - ./storage:/home/www/storage/music-migrator
      - ./data/nginx/logs:/var/log/nginx
      - ./env/nginx/webserver/nginx.conf:/etc/nginx/nginx.conf
      - ./env/nginx/webserver/conf.d:/etc/nginx/conf.d
      - ./env/nginx/webserver/defaults:/etc/nginx/defaults
      - ./env/nginx/webserver/global:/etc/nginx/global
      - /var/run/docker.sock:/tmp/docker.sock:ro

  mmpostgres:
    build: ./env/postgres
    container_name: mmpostgres
    env_file: env/app/.env
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./data/postgres:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432

  mmapp:
    build: ./env/app
    # command: app manage.py runserver 0.0.0.0:8083
    container_name: mmapp
    env_file: env/app/.env
    environment:
      - PORT=80
      - NODE_ENV=production
    # restart: always
    volumes:
      - ./src:/home/www/music-migrator/src:delegated
      - ./env:/var/env:delegated
    tty: true
    ports:
      - 3000:3000
      - 5000:5000
    depends_on:
      - mmpostgres

networks:
  default:
    external:
      name: nginx-proxy